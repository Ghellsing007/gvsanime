import mongoose from 'mongoose';
import { createClient } from '@supabase/supabase-js';

// Verificar conexi√≥n a MongoDB
async function checkMongoDB() {
  try {
    const uri = process.env.MONGODB_URI;
    if (!uri) {
      console.log('‚ùå MONGODB_URI no est√° configurada');
      return false;
    }
    
    await mongoose.connect(uri);
    console.log('‚úÖ MongoDB conectado correctamente');
    return true;
  } catch (error) {
    console.log('‚ùå Error conectando a MongoDB:', error.message);
    return false;
  }
}

// Verificar conexi√≥n a Supabase
async function checkSupabase() {
  try {
    const url = process.env.SUPABASE_URL;
    const key = process.env.SUPABASE_ANON_KEY;
    
    if (!url || !key) {
      console.log('‚ùå Variables de Supabase no configuradas');
      return false;
    }
    
    const supabase = createClient(url, key);
    const { data, error } = await supabase.from('animes').select('count').limit(1);
    
    if (error) {
      console.log('‚ùå Error conectando a Supabase:', error.message);
      return false;
    }
    
    console.log('‚úÖ Supabase conectado correctamente');
    return true;
  } catch (error) {
    console.log('‚ùå Error conectando a Supabase:', error.message);
    return false;
  }
}

// Verificar variables de entorno cr√≠ticas
function checkEnvironmentVariables() {
  const required = [
    'MONGODB_URI',
    'SUPABASE_URL', 
    'SUPABASE_ANON_KEY',
    'JWT_SECRET'
  ];
  
  const missing = required.filter(key => !process.env[key]);
  
  if (missing.length > 0) {
    console.log('‚ùå Variables de entorno faltantes:', missing.join(', '));
    return false;
  }
  
  console.log('‚úÖ Todas las variables de entorno est√°n configuradas');
  return true;
}

// Health check principal
async function healthCheck() {
  console.log('üîç Iniciando health check...\n');
  
  const envCheck = checkEnvironmentVariables();
  const mongoCheck = await checkMongoDB();
  const supabaseCheck = await checkSupabase();
  
  console.log('\nüìä Resumen del health check:');
  console.log(`Variables de entorno: ${envCheck ? '‚úÖ' : '‚ùå'}`);
  console.log(`MongoDB: ${mongoCheck ? '‚úÖ' : '‚ùå'}`);
  console.log(`Supabase: ${supabaseCheck ? '‚úÖ' : '‚ùå'}`);
  
  const allGood = envCheck && mongoCheck && supabaseCheck;
  
  if (allGood) {
    console.log('\nüéâ ¬°Todo est√° funcionando correctamente!');
    process.exit(0);
  } else {
    console.log('\n‚ö†Ô∏è  Hay problemas que necesitan atenci√≥n');
    process.exit(1);
  }
}

// Ejecutar health check
healthCheck().catch(error => {
  console.error('‚ùå Error en health check:', error);
  process.exit(1);
}); 