// test-data-source-logic.js
// Script para probar la l√≥gica de selecci√≥n de fuente de datos

import { getDataSourceInfo, getAnimeByIdManager } from './services/anime/dataSourceManager.js';

// Funci√≥n para probar diferentes configuraciones
async function testDataSourceLogic() {
  console.log('üß™ Probando l√≥gica de fuente de datos\n');

  // Configuraci√≥n 1: Solo Jikan
  console.log('=== CONFIGURACI√ìN 1: Solo Jikan ===');
  process.env.ANIME_DATA_SOURCE = 'jikan';
  process.env.FORCE_JIKAN = 'false';
  process.env.CACHE_ENABLED = 'false';
  
  const info1 = getDataSourceInfo();
  console.log('üìä Informaci√≥n de fuente:', info1);
  
  try {
    const anime1 = await getAnimeByIdManager('1');
    console.log('‚úÖ Anime obtenido correctamente');
    console.log(`   - T√≠tulo: ${anime1.title}`);
    console.log(`   - Im√°genes: ${anime1.images?.jpg?.imageUrl ? '‚úÖ' : '‚ùå'}`);
  } catch (error) {
    console.log('‚ùå Error:', error.message);
  }
  console.log('');

  // Configuraci√≥n 2: Solo MongoDB
  console.log('=== CONFIGURACI√ìN 2: Solo MongoDB ===');
  process.env.ANIME_DATA_SOURCE = 'mongodb';
  process.env.FORCE_JIKAN = 'false';
  process.env.CACHE_ENABLED = 'true';
  
  const info2 = getDataSourceInfo();
  console.log('üìä Informaci√≥n de fuente:', info2);
  
  try {
    const anime2 = await getAnimeByIdManager('1');
    console.log('‚úÖ Anime obtenido correctamente');
    console.log(`   - T√≠tulo: ${anime2.title}`);
    console.log(`   - Im√°genes: ${anime2.images?.jpg?.imageUrl ? '‚úÖ' : '‚ùå'}`);
  } catch (error) {
    console.log('‚ùå Error:', error.message);
  }
  console.log('');

  // Configuraci√≥n 3: Hybrid
  console.log('=== CONFIGURACI√ìN 3: Hybrid ===');
  process.env.ANIME_DATA_SOURCE = 'hybrid';
  process.env.FORCE_JIKAN = 'false';
  process.env.CACHE_ENABLED = 'true';
  
  const info3 = getDataSourceInfo();
  console.log('üìä Informaci√≥n de fuente:', info3);
  
  try {
    const anime3 = await getAnimeByIdManager('1');
    console.log('‚úÖ Anime obtenido correctamente');
    console.log(`   - T√≠tulo: ${anime3.title}`);
    console.log(`   - Im√°genes: ${anime3.images?.jpg?.imageUrl ? '‚úÖ' : '‚ùå'}`);
  } catch (error) {
    console.log('‚ùå Error:', error.message);
  }
  console.log('');

  // Configuraci√≥n 4: FORCE_JIKAN
  console.log('=== CONFIGURACI√ìN 4: FORCE_JIKAN ===');
  process.env.ANIME_DATA_SOURCE = 'hybrid';
  process.env.FORCE_JIKAN = 'true';
  process.env.CACHE_ENABLED = 'true';
  
  const info4 = getDataSourceInfo();
  console.log('üìä Informaci√≥n de fuente:', info4);
  
  try {
    const anime4 = await getAnimeByIdManager('1');
    console.log('‚úÖ Anime obtenido correctamente');
    console.log(`   - T√≠tulo: ${anime4.title}`);
    console.log(`   - Im√°genes: ${anime4.images?.jpg?.imageUrl ? '‚úÖ' : '‚ùå'}`);
  } catch (error) {
    console.log('‚ùå Error:', error.message);
  }
  console.log('');

  console.log('‚úÖ Pruebas completadas');
}

// Ejecutar pruebas
testDataSourceLogic(); 